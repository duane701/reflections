# When would you want to use a remote repository rather than keeping all your work local?

When you want to share with other people. When you want a backup of your code so you don't loose it.

# Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Pulling automatically avoids unexpected changes to your code. Most
importantly it avoids unexpected conflicts.

# Describe the differences between forks, clones, and branches. When would you
use one instead of another?

* Forks create new repositories on GitHub.
* Clones create a link between a remote and local workspace.
* Branches give you inddependent areas to work.

Fork when you like someone elses work and want to start with it or when you
want to work with them.

Clone in order to have a remote for your work where you can share with
others on the same project.

Branch in order to keep your work all separate and independent.

# What is the benefit of having a copy of the last known state of the remote
stored locally?

You have a complete history of all of the changes. This allows you to
continue working while disconnected from the remote. git can sort out any
required changes when you get back to the remote.

# How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

Almost everything harder. You could use email or sneaker net to copy files
around. Ick.

# When would you want to make changes in a separate branch rather than
directly in master? What benefits does each approach have?

Don't ever make changes directly on master. Master is for forward work done in other branches.

There is no other approach!

